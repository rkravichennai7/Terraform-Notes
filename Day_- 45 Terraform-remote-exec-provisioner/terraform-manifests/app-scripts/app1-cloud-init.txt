#cloud-config

package_upgrade: false
packages:
  - httpd
write_files:
  - owner: root:root 
    path: /var/www/html/index.html
    content: |
      <h1>Welcome to StackSimplify - APP-1</h1>
  - owner: root:root 
    path: /var/www/html/app1/index.html
    content: |
      <!DOCTYPE html> <html> <body style="background-color:rgb(250, 210, 210);"> <h1>Welcome to Stack Simplify - APP-1</h1> <p>Terraform Demo</p> <p>Application Version: V1</p> </body></html>      
runcmd:
  - sudo systemctl start httpd  
  - sudo systemctl enable httpd
  - sudo systemctl stop firewalld
  - sudo mkdir /var/www/html/app1 
  - [sudo, curl, -H, "Metadata:true", --noproxy, "*", "http://169.254.169.254/metadata/instance?api-version=2020-09-01", -o, /var/www/html/app1/metadata.html]

-------------------------------------------------------------------------------------------------------------------------------------------

# Explanation: - 

#### 1. Header

#cloud-config: - Indicates this file is a cloud-init script interpreting YAML settings to provision the instance automatically.

#### 2. Package Management

- package_upgrade: false | Prevent the system from upgrading packages on first boot (speeds up deployments if you want to skip updates).

- packages | httpd is specified, so (for RHEL/CentOS/Fedora) Apache will be installed automatically. The packages module ensures the required software is present.

#### 3. File Writing (write_files)

- write_files: This section writes specific files upon instance initialization.  
- owner: Sets file owner and group: root:root (root user, root group).  
- path:  The full file path to create or overwrite (parent directories must exist or be created elsewhere unless write_files can create them).
- content: Uses YAML's block string (|) to specify file contents (multi-line for the first file, single-line for the second), which will be written as the file's contents on creation.

#### 4. Running Commands (runcmd)

runcmd:
  - sudo systemctl start httpd  
  - sudo systemctl enable httpd
  - sudo systemctl stop firewalld
  - sudo mkdir /var/www/html/app1 
  - [sudo, curl, -H, "Metadata:true", --noproxy, "*", "http://169.254.169.254/metadata/instance?api-version=2020-09-01", -o, /var/www/html/app1/metadata.html]

- runcmd: A list of commands to be run as late as possible in the boot process (once everything else is ready). Each entry runs either a shell command or an array as an argument list.  

    - sudo systemctl start httpd — starts Apache immediately on boot.
    - sudo systemctl enable httpd — configures Apache to start automatically at every boot.
    - sudo systemctl stop firewalld — stops and disables the firewall daemon (firewalld), allowing web traffic through (this is an insecure option unless the firewall is not needed).
    - sudo mkdir /var/www/html/app1 — creates the /app1 subdirectory for the second custom file.
    - [sudo, curl, -H, "Metadata:true", --noproxy, "*", "http://169.254.169.254/metadata/instance?api-version=2020-09-01", -o, /var/www/html/app1/metadata.html]  
      Downloads instance metadata (from the IMDS endpoint, typically on Azure) and saves it to a file.

### Order of Operations and Typical Use

- General flow: On instance start, cloud-init parses this file:
  - Installs httpd
  - Writes the main and app index.html files (after initial `/var/www/html` exists; must ensure /app1 directory exists before writing the second file)
  - Runs the commands, stopping the firewall, making directories, enabling and starting Apache, and retrieving metadata.

Potential caveat: Ordering matters: if /var/www/html/app1 does not exist, write_files for that path may fail unless the parent directory is created beforehand in the runcmd or with write_files that specify defer or use explicit directory creation.
